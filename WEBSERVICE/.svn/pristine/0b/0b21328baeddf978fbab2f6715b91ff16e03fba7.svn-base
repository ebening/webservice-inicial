package com.uadec.ws.model;

import java.io.Serializable;
import java.util.Map;

import org.apache.log4j.Logger;

import com.uadec.core.cm.AtributoCm;
import com.uadec.core.cm.BaseDocumentoCm;
import com.uadec.core.cm.FileCm;
import com.uadec.core.util.PropertyUtil;
import com.uadec.entity.model.CatDocumentos;
import com.uadec.entity.model.DocumentoImportado;
import com.uadec.entity.model.Solicitud;
import com.uadec.entity.model.Usuario;
import com.uadec.ws.util.ConstantesWs;

/**
 * @author adinfi
 *
 */
public class CMDocumento extends BaseDocumentoCm implements Serializable {

	private static final long serialVersionUID = 9143580773269827713L;
	private final static Logger log = Logger.getLogger(CMDocumento.class);
	
	private Solicitud solicitud;
	private Usuario usuario;
	private DocumentoImportado documentoImportado;
	private CatDocumentos catDocumentos;
	
	public CMDocumento(String url, FileCm file, Solicitud solicitud, Usuario usuario, DocumentoImportado documentoImportado, CatDocumentos catDocumentos) {
		super(url,file);
		setSolicitud(solicitud);
		setUsuario(usuario);
		setDocumentoImportado(documentoImportado);
		setCatDocumentos(catDocumentos);
	}
	
	public Solicitud getSolicitud() {
		return solicitud;
	}
	public void setSolicitud(Solicitud solicitud) {
		this.solicitud = solicitud;
	}
	public Usuario getUsuario() {
		return usuario;
	}
	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}
	public DocumentoImportado getDocumentoImportado() {
		return documentoImportado;
	}
	public void setDocumentoImportado(DocumentoImportado documentoImportado) {
		this.documentoImportado = documentoImportado;
	}
	public CatDocumentos getCatDocumentos() {
		return catDocumentos;
	}
	public void setCatDocumentos(CatDocumentos catDocumentos) {
		this.catDocumentos = catDocumentos;
	}
	
	@Override
	public void setValues(Map<String, AtributoCm> atributos) {
		try {
			if(atributos!=null && !atributos.isEmpty()){
				atributos.get("UAC_ID_SOL").setValor(getSolicitud().getIdSolicitud());
				atributos.get("UAC_CICLO").setValor(getSolicitud().getCiclo());
				atributos.get("UAC_CUENTA_PAGAR").setValor(getSolicitud().getCuentaPagar());
				atributos.get("UAC_USUARIO").setValor(getUsuario().getNombre() +" "+ getUsuario().getApellidoMaterno()+" "+getUsuario().getApellidoMaterno());
				atributos.get("UAC_NOMBREDOC").setValor(getDocumentoImportado().getNombredoc());
				atributos.get("UAC_TIPODOC").setValor(getCatDocumentos().getDescripcion());
			}
		} catch (Exception ex) {
			log.error(ex);
		}
	}
	@Override
	public String getValueSearch() {
		return solicitud.getIdSolicitud().toString();
	}
	@Override
	public String getModel() {
		return PropertyUtil.getProperty(ConstantesWs.UAC_DOCUMENT_KEY_MODEL);
	}
	@Override
	public String getKeySearch() {
		return ConstantesWs.UAC_DOCUMENT_KEY_SEARCH;
	}
}
